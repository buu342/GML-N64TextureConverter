<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_example</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* set the owner window for the dialogs;
the default is the foreground window. */
widget_set_owner(hwnd_main);

// set an icon for the dialogs from a *.png file.
if (os_type != os_windows &amp;&amp; os_type != os_macosx)
widget_set_icon(working_directory + "/assets/icon.png");
else widget_set_icon(working_directory + "/icon.png");

filter = "Sprite Images (*.png *.gif *.jpg *.jpeg)|*.png;*.gif;*.jpg;*.jpeg|Background Images (*.png)|*.png|All Files (*.*)|*.*";
dlg = 0;
ret = 0;

alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* variant argument types are not supported. use 
string or real where specified in the docs. docs
can be read at http://dialogmodule.weebly.com */

if (dlg == 0) {
  widget_set_caption("DialogModule");
  ret = show_message_async("Hello World!");
}

if (dlg == 1) {
  ret = show_message_cancelable_async("Hello World!");
}

if (dlg == 2) {
  ret = show_question_async("Yes or no?");
}

if (dlg == 3) {
  ret = show_question_cancelable_async("Yes, no, or cancel?");
}

if (dlg == 4) {
  ret = show_attempt_async("Hello World!");
}

if (dlg == 5) {
  ret = show_error_async("Hello World!", false);
}

if (dlg == 6) {
  ret = get_string_async("Enter a string:", "Hello World!");
}

if (dlg == 7) {
  ret = get_password_async("Enter a string password:", "Hello World!");
}

if (dlg == 8) {
  ret = get_integer_async("Enter an integer:", 0);
}

if (dlg == 9) {
  ret = get_passcode_async("Enter an integer passcode:", 0);
}

if (dlg == 10) {
  ret = get_open_filename_async(filter, "Select a File");
}

if (dlg == 11) {
  ret = get_open_filename_ext_async(filter, "Select a File", "", "Open Ext");
}

if (dlg == 12) {
  ret = get_open_filenames_async(filter, "Select Files");
}

if (dlg == 13) {
  ret = get_open_filenames_ext_async(filter, "Select Files", "", "Open Ext");
}

if (dlg == 14) {
  ret = get_save_filename_async(filter, "Untitled.png");
}

if (dlg == 15) {
  ret = get_save_filename_ext_async(filter, "Untitled.png", "", "Save As Ext");
}

if (dlg == 16) {
  ret = get_directory_async("");
}

if (dlg == 17) {
  ret = get_directory_alt_async("Select Directory Alt", "");
}

if (dlg == 18) {
  ret = get_color_async(c_red);
}

if (dlg == 19) {
  // this is kinda dumb tbh
  if (os_type == os_macosx) {
    title = "Colors Ext";
  } else {
    title = "Color Ext";
  }
  ret = get_color_ext_async(c_red, title);
}

if (dlg == 20) {
  game_end();
}

dlg++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dialog = ds_map_find_value(async_load, "id");
var status = ds_map_find_value(async_load, "status");
var number = ds_map_find_value(async_load, "value");
var result = ds_map_find_value(async_load, "result");

if (ret == dialog) {
  if (!is_undefined(status)) {
    if (!is_undefined(number)) {
      show_message(string(number));
    } else if (!is_undefined(result) &amp;&amp; result != "") {
      show_message(string(result));
    } else if (is_undefined(result)) {
      show_message(string(status));
    }
    alarm[0] = 2;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
