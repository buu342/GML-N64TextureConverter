<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width = 80
height = 24
text = "Text"
icon = -1
execute = -1
popup = false
enabled = true
dependonexecute = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mx, my;
mx = window_view_mouse_get_x(0)
my = window_view_mouse_get_y(0)

if (dependonexecute) 
{
    if script_execute(execute, 1) != -1
        enabled = true
    else if script_execute(execute, 1) == -1
        enabled = false
}

if !enabled
    exit
    
if mx &gt;= x-(width/2) &amp;&amp; mx &lt;= x+(width/2) &amp;&amp; my &gt;= y-(height/2) &amp;&amp; my &lt;= y+(height/2) &amp;&amp; (instance_number(obj_popup) == 0 || popup == true)
{
    if mouse_check_button(mb_left)
        global.lastbuttonpressed = id
        
    if mouse_check_button_released(mb_left)
        if execute != -1
        {
            script_execute(execute, 0)
            mouse_clear(mb_any)     
        }
}
else if (instance_number(obj_popup) == 0 || popup == true) &amp;&amp; global.lastbuttonpressed == id &amp;&amp; keyboard_check_pressed(vk_enter)
    if execute != -1
        script_execute(execute, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mx, my;
mx = window_view_mouse_get_x(0)
my = window_view_mouse_get_y(0)

// Button Gradient
if enabled
    draw_rectangle_color(x-width/2,y-height/2+1,x+width/2,y+height/2-1,make_color_rgb(228,223,206),make_color_rgb(228,223,206),make_color_rgb(245,244,235),make_color_rgb(227,222,204),false)
else
    draw_rectangle_color(x-width/2+2,y-height/2+2,x+width/2-2,y+height/2-2,make_color_rgb(245,244,234),make_color_rgb(245,244,234),make_color_rgb(245,244,234),make_color_rgb(245,244,234),false)


// Button outline when mouse over
if enabled &amp;&amp; mx &gt;= x-(width/2) &amp;&amp; mx &lt;= x+(width/2) &amp;&amp; my &gt;= y-(height/2) &amp;&amp; my &lt;= y+(height/2) &amp;&amp; mouse_check_button(mb_left) &amp;&amp; (instance_number(obj_popup) == 0 || popup == true)
{
    draw_rectangle_color(x-width/2+2,y-height/2+2,x+width/2-2,y+height/2-2,make_color_rgb(209,204,193),make_color_rgb(209,204,193),make_color_rgb(242,241,238),make_color_rgb(242,241,238),false)
    draw_rectangle_color(x-width/2+2,y-height/2+2,x-width/2+5,y+height/2-2,make_color_rgb(209,204,193),make_color_rgb(209,204,193),make_color_rgb(242,241,238),make_color_rgb(209,204,193),false)
}
else
{
    if enabled
    {
        
        draw_rectangle_color(x-width/2+2,y-height/2+2,x+width/2-2,y+height/2-2,c_white,c_white,make_color_rgb(214,208,197),make_color_rgb(214,208,197),false)
        draw_rectangle_color(x+width/2-5,y-height/2+2,x+width/2-2,y+height/2-2,c_white,make_color_rgb(214,208,197),make_color_rgb(214,208,197),make_color_rgb(214,208,197), false)
        
        draw_line_color(x-width/2+4,y-height/2, x+width/2-5,y-height/2,make_color_rgb(224,220,201),make_color_rgb(225,221,202))
        draw_line_color(x-width/2+4,y+height/2-1, x+width/2-5,y+height/2-1,make_color_rgb(248,247,240),make_color_rgb(248,247,240))
        if mx &gt;= x-(width/2) &amp;&amp; mx &lt;= x+(width/2) &amp;&amp; my &gt;= y-(height/2) &amp;&amp; my &lt;= y+(height/2) &amp;&amp; (instance_number(obj_popup) == 0 || popup == true)
        {
            var col1, col2;
            col1 = make_color_rgb(255, 240, 207)
            col2 = make_color_rgb(229, 151, 0)
            draw_line_width_color(x-width/2+2, y-height/2+2, x+width/2-2, y-height/2+2,2, col1, col1)
            draw_line_width_color(x-width/2+2, y+height/2-4, x+width/2-2, y+height/2-4,2, col2, col2)
            draw_line_width_color(x-width/2+2, y-height/2+3, x-width/2+2, y+height/2-3,2, col1, col2)
            draw_line_width_color(x+width/2-4, y-height/2+3, x+width/2-4, y+height/2-3,2, col1, col2)
        }
        else if global.lastbuttonpressed == id
        {
            var col1, col2;
            col1 = make_color_rgb(206, 231, 255)
            col2 = make_color_rgb(105, 130, 238)
            draw_line_width_color(x-width/2+2, y-height/2+2, x+width/2-2, y-height/2+2,2, col1, col1)
            draw_line_width_color(x-width/2+2, y+height/2-4, x+width/2-2, y+height/2-4,2, col2, col2)
            draw_line_width_color(x-width/2+2, y-height/2+3, x-width/2+2, y+height/2-3,2, col1, col2)
            draw_line_width_color(x+width/2-4, y-height/2+3, x+width/2-4, y+height/2-3,2, col1, col2)
        }
    }
}
draw_set_color(c_white)
var spr;
if enabled
    spr = spr_but_corner
else
    spr = spr_but_corner_grayscale
draw_sprite(spr,0,x-width/2,y-height/2)
draw_sprite(spr,1,x+width/2-4,y-height/2)
draw_sprite(spr,2,x-width/2,y+height/2-4)
draw_sprite(spr,3,x+width/2-4,y+height/2-4)
draw_set_color(c_white)


if enabled
    draw_set_color(make_color_rgb(0,60,116))
else
    draw_set_color(make_color_rgb(201,199,186))  
draw_line(x-width/2+3, y-height/2+1, x+width/2-3, y-height/2+1)
draw_line(x-width/2+3, y+height/2-2, x+width/2-3, y+height/2-2)
draw_line(x-width/2+1, y-height/2+3, x-width/2+1, y+height/2-3)
draw_line(x+width/2-2, y-height/2+3, x+width/2-2, y+height/2-3)
draw_set_color(c_white)

draw_set_color(c_black)
draw_set_font(fnt_button)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
if icon != -1
{
    var sprite;
    sprite = spr_icons
    if (!enabled)
        sprite = spr_icons_grayscale
    if enabled &amp;&amp; mx &gt;= x-(width/2) &amp;&amp; mx &lt;= x+(width/2) &amp;&amp; my &gt;= y-(height/2) &amp;&amp; my &lt;= y+(height/2) &amp;&amp; mouse_check_button(mb_left) &amp;&amp; (instance_number(obj_popup) == 0 || popup == true)
        draw_sprite(sprite,icon,round(x+1-string_width(text)/2),y)
    else
        draw_sprite(sprite,icon,round(x-string_width(text)/2),y)
    if enabled
       draw_set_color(c_black)
    else
        draw_set_color(make_color_rgb(161,161,146))
    draw_text(x+10,y,text)
}
else
{
    if enabled
       draw_set_color(c_black)
    else
        draw_set_color(make_color_rgb(161,161,146))
    draw_text(x,y,text)
}
draw_set_halign(fa_left)
draw_set_valign(fa_top)
draw_set_font(fnt_default)
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
